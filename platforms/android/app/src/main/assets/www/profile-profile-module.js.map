{"version":3,"sources":["webpack:///./src/app/api/profile.service.ts","webpack:///./src/app/members/profile/profile.module.ts","webpack:///./src/app/members/profile/profile.page.html","webpack:///./src/app/members/profile/profile.page.scss","webpack:///./src/app/members/profile/profile.page.ts"],"names":[],"mappings":"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","file":"profile-profile-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n    URl = 'http://www.drivixcorp.com/api/';\n  constructor(public http: HttpClient) { }\n\n    // Get My Profile\n    Profile(Token) {\n        return new Promise((resolve, reject) => {\n            this.http.post(this.URl + 'profile/' + Token, JSON.stringify({}), {\n            })\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    // Add Profile\n    UpdateProfileData(data , URL) {\n        return new Promise((resolve, reject) => {\n            this.http.post(this.URl + URL , JSON.stringify({}), {\n                params: new HttpParams()\n                    .set('token', data.token)\n                    .append('phone', data.phone)\n                    .append('gender', data.gender)\n                    .append('DOB', data.DOB)\n                    .append('job', data.job)\n                    .append('location', data.location),\n            })\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePage } from './profile.page';\n\nimport {ReactiveFormsModule} from '@angular/forms';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'})\n  ],\n  declarations: [ProfilePage],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n],\n})\nexport class ProfilePageModule {}\n","module.exports = \"<ion-header no-shadow no-border>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title color=\\\"light\\\">PROFILE</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n    <ion-item class=\\\"intro\\\">\\n        <ion-item class=\\\"fas fa-user-circle user\\\"></ion-item>\\n        <ion-item class=\\\"username\\\">ALIA AMR</ion-item>\\n      </ion-item>\\n      \\n      <div [formGroup]=\\\"profile_form\\\" class=\\\"\\\">\\n        <ion-item>\\n          <ion-label>Job</ion-label>\\n          <ion-input [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"data.job\\\" formControlName=\\\"job\\\"></ion-input>\\n        </ion-item>\\n\\n        <span class=\\\"error-message\\\" *ngIf=\\\"profile_form.controls['job'].hasError('required') && (profile_form.controls['job'].dirty || profile_form.controls['job'].touched)\\\">Please enter your job</span>\\n        <span class=\\\"error-message\\\" *ngIf=\\\"profile_form.controls['job'].hasError('minLength') && (profile_form.controls['job'].dirty || profile_form.controls['job'].touched)\\\">Enter at least 5 characters</span>\\n        <span class=\\\"error-message\\\" *ngIf=\\\"profile_form.controls['job'].hasError('maxLength') && (profile_form.controls['job'].dirty || profile_form.controls['job'].touched)\\\">At most 50 are allowed</span>\\n        \\n        <ion-item>\\n          <ion-label>Phone number</ion-label>\\n          <ion-input [(ngModel)]=\\\"data.phone\\\" [ngModelOptions]=\\\"{standalone: true}\\\" formControlName=\\\"phone\\\"></ion-input>\\n        </ion-item>\\n\\n        <span class=\\\"error-message\\\" *ngIf=\\\"profile_form.controls['phone'].hasError('required') && (profile_form.controls['phone'].dirty || profile_form.controls['phone'].touched)\\\">Please enter your phone number</span>\\n        <span class=\\\"error-message\\\" *ngIf=\\\"profile_form.controls['phone'].hasError('minLength') && (profile_form.controls['phone'].dirty || profile_form.controls['phone'].touched)\\\">Please enter valid phone number</span>\\n        <span class=\\\"error-message\\\" *ngIf=\\\"profile_form.controls['phone'].hasError('maxLength') && (profile_form.controls['phone'].dirty || profile_form.controls['phone'].touched)\\\">Please enter valid phone number</span>\\n        <span class=\\\"error-message\\\" *ngIf=\\\"profile_form.controls['phone'].hasError('pattern') && (profile_form.controls['phone'].dirty || profile_form.controls['phone'].touched)\\\">Please enter valid phone number</span>\\n\\n        <ion-item>\\n          <ion-label>Address</ion-label>\\n          <ion-input [(ngModel)]=\\\"data.location\\\" [ngModelOptions]=\\\"{standalone: true}\\\" formControlName=\\\"location\\\"></ion-input>\\n        </ion-item>\\n\\n        <span class=\\\"error-message\\\" *ngIf=\\\"profile_form.controls['location'].hasError('required') && (profile_form.controls['location'].dirty || profile_form.controls['location'].touched)\\\">Please enter your address</span>\\n        <span class=\\\"error-message\\\" *ngIf=\\\"profile_form.controls['location'].hasError('minLength') && (profile_form.controls['location'].dirty || profile_form.controls['location'].touched)\\\">Enter at least 5 characters</span>\\n        <span class=\\\"error-message\\\" *ngIf=\\\"profile_form.controls['location'].hasError('maxLength') && (profile_form.controls['location'].dirty || profile_form.controls['location'].touched)\\\">At most 25 are allowed</span>\\n\\n        <ion-list>\\n            <ion-radio-group [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"data.gender\\\" formControlName=\\\"gender\\\">\\n              <ion-list-header>\\n                <ion-label>Gender</ion-label>\\n              </ion-list-header>\\n              <ion-item>\\n                <ion-label>Male</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"male\\\"></ion-radio>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label>Female</ion-label>\\n                <ion-radio slot=\\\"start\\\" value=\\\"female\\\" checked></ion-radio>\\n              </ion-item>\\n            </ion-radio-group>\\n          </ion-list>\\n\\n          <span class=\\\"error-message\\\" *ngIf=\\\"profile_form.controls['gender'].hasError('required') && (profile_form.controls['gender'].dirty || profile_form.controls['gender'].touched)\\\">Please select your gender</span>\\n\\n        <ion-item>\\n          <ion-label>Birth date</ion-label>\\n          <ion-input [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"data.DOB\\\" type=\\\"date\\\" formControlName=\\\"DOB\\\" value =\\\"{{ DOB | date: 'yyyy-MM-dd'}}\\\"></ion-input>\\n        </ion-item>\\n\\n        <span class=\\\"error-message\\\" *ngIf=\\\"profile_form.controls['DOB'].hasError('required') && (profile_form.controls['DOB'].dirty || profile_form.controls['DOB'].touched)\\\">Please select your birth date</span>\\n\\n        <ion-button [ngClass]=\\\"{'hide':HasProfile == true , 'active':HasProfile == false}\\\"  id=\\\"AddProfile\\\" class=\\\"save-btn\\\" expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"UpdateMyData('profile')\\\">\\n          Save<ion-icon name=\\\"checkmark\\\"></ion-icon>\\n        </ion-button>\\n\\n      <ion-button  [ngClass]=\\\"{'hide':HasProfile == false , 'active':HasProfile == true}\\\" id=\\\"UpdateProfile\\\" class=\\\"save-btn\\\" expand=\\\"block\\\" color=\\\"secondary\\\" (click)=\\\"UpdateMyData('updateprofile')\\\">\\n          Update Profile<ion-icon name=\\\"checkmark\\\"></ion-icon>\\n      </ion-button>\\n    </div>\\n\\n      <ion-button class=\\\"cancel-btn\\\" expand=\\\"block\\\" color=\\\"primary\\\" routerLink=\\\"/members/menu/dashboard\\\" routerDirection=\\\"forward\\\">\\n        Cancel\\n      </ion-button>\\n    <!--End Profile Form-->\\n</ion-content>\\n\"","module.exports = \"ion-title {\\n  font-family: 'Raleway', sans-serif;\\n  letter-spacing: 1.5px; }\\n\\n.intro {\\n  margin: auto;\\n  text-align: center; }\\n\\n.user {\\n  font-size: 80px;\\n  color: var(--ion-color-primary-tint); }\\n\\n.username {\\n  font-size: 13px;\\n  letter-spacing: 1.8px;\\n  font-family: 'Raleway', sans-serif; }\\n\\n.profile-form ion-label, ion-input {\\n  font-family: 'Titillium Web', sans-serif;\\n  color: #3a3c4d;\\n  font-size: 14px; }\\n\\n.profile-form ion-input {\\n  color: black; }\\n\\n.profile-form .save-btn, .cancel-btn {\\n  font-family: 'Titillium Web', sans-serif;\\n  --border-radius: 0px;\\n  --box-shadow:none;\\n  margin-top: 20px; }\\n\\n.save-btn ion-icon, .cancel-btn ion-icon {\\n  margin-left: 5px; }\\n\\n.cancel-btn {\\n  margin-bottom: 25px; }\\n\\n.hide {\\n  display: none; }\\n\\n.active {\\n  display: block; }\\n\\n.error-message {\\n  font-size: 13px;\\n  color: var(--ion-color-danger-shade);\\n  font-family: 'Titillium Web', sans-serif;\\n  text-align: right;\\n  margin: 0px;\\n  float: right; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9tbnQvV2luZG93cy9Vc2Vycy9IUC9Eb2N1bWVudHMvUHJvamVjdHMvSW9uaWMvRHJpdml4L3NyYy9hcHAvbWVtYmVycy9wcm9maWxlL3Byb2ZpbGUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0NBQWtDO0VBQ2xDLHFCQUFxQixFQUFBOztBQUV6QjtFQUNJLFlBQVk7RUFDWixrQkFBa0IsRUFBQTs7QUFFdEI7RUFDSSxlQUFlO0VBQ2Ysb0NBQW9DLEVBQUE7O0FBRXhDO0VBQ0ksZUFBZTtFQUNmLHFCQUFxQjtFQUNyQixrQ0FBa0MsRUFBQTs7QUFFdEM7RUFDSSx3Q0FBd0M7RUFDeEMsY0FBYztFQUNkLGVBQWUsRUFBQTs7QUFFbkI7RUFDSSxZQUFZLEVBQUE7O0FBRWhCO0VBQ0ksd0NBQXdDO0VBQ3hDLG9CQUFnQjtFQUNoQixpQkFBYTtFQUNiLGdCQUFnQixFQUFBOztBQUVwQjtFQUNJLGdCQUFnQixFQUFBOztBQUVwQjtFQUNJLG1CQUFtQixFQUFBOztBQUV2QjtFQUVJLGFBQWEsRUFBQTs7QUFFakI7RUFFSSxjQUFjLEVBQUE7O0FBRWxCO0VBQ0ksZUFBZTtFQUNmLG9DQUFvQztFQUNwQyx3Q0FBd0M7RUFDeEMsaUJBQWlCO0VBQ2pCLFdBQVU7RUFDVixZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tZW1iZXJzL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tdGl0bGV7XG4gICAgZm9udC1mYW1pbHk6ICdSYWxld2F5Jywgc2Fucy1zZXJpZjtcbiAgICBsZXR0ZXItc3BhY2luZzogMS41cHg7XG59XG4uaW50cm97XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi51c2Vye1xuICAgIGZvbnQtc2l6ZTogODBweDtcbiAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnktdGludCk7XG59XG4udXNlcm5hbWV7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGxldHRlci1zcGFjaW5nOiAxLjhweDtcbiAgICBmb250LWZhbWlseTogJ1JhbGV3YXknLCBzYW5zLXNlcmlmO1xufVxuLnByb2ZpbGUtZm9ybSBpb24tbGFiZWwsIGlvbi1pbnB1dHtcbiAgICBmb250LWZhbWlseTogJ1RpdGlsbGl1bSBXZWInLCBzYW5zLXNlcmlmO1xuICAgIGNvbG9yOiAjM2EzYzRkO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5wcm9maWxlLWZvcm0gaW9uLWlucHV0e1xuICAgIGNvbG9yOiBibGFjaztcbn1cbi5wcm9maWxlLWZvcm0gLnNhdmUtYnRuLCAuY2FuY2VsLWJ0bntcbiAgICBmb250LWZhbWlseTogJ1RpdGlsbGl1bSBXZWInLCBzYW5zLXNlcmlmO1xuICAgIC0tYm9yZGVyLXJhZGl1czogMHB4O1xuICAgIC0tYm94LXNoYWRvdzpub25lO1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG59XG4uc2F2ZS1idG4gaW9uLWljb24sIC5jYW5jZWwtYnRuIGlvbi1pY29ue1xuICAgIG1hcmdpbi1sZWZ0OiA1cHg7XG59XG4uY2FuY2VsLWJ0bntcbiAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xufVxuLmhpZGVcbntcbiAgICBkaXNwbGF5OiBub25lO1xufVxuLmFjdGl2ZVxue1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuLmVycm9yLW1lc3NhZ2V7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFuZ2VyLXNoYWRlKTtcbiAgICBmb250LWZhbWlseTogJ1RpdGlsbGl1bSBXZWInLCBzYW5zLXNlcmlmO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIG1hcmdpbjowcHg7XG4gICAgZmxvYXQ6IHJpZ2h0O1xufSJdfQ== */\"","import { Component } from '@angular/core';\nimport {AuthenticationService} from '../../api/authentication.service';\nimport {NavController, ToastController } from '@ionic/angular';\nimport {ProfileService} from '../../api/profile.service';\nimport {Storage} from '@ionic/storage';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage {\n    Token = null;\n    HasProfile = false;\n    // obj data\n    data = {\n        phone: ' ',\n        gender: ' ',\n        DOB: ' ',\n        location: ' ',\n        job: ' ',\n        token: this.Token,\n    };\n    \n    profile_form: FormGroup;\n    fb: FormBuilder;\n    \n    job: AbstractControl;\n\n  constructor(public navCtrl: NavController , public Profile: ProfileService ,\n     private storage: Storage , private toast: ToastController, form_builder: FormBuilder) {\n          this.profile_form = form_builder.group({\n            'job': [null, Validators.compose([Validators.required, Validators.minLength(5), Validators.maxLength(50)])],\n            'location': [null, Validators.compose([Validators.required, Validators.minLength(5), Validators.maxLength(25)])],\n            'gender': [null, Validators.required],\n            'phone': [null, Validators.compose([Validators.required, Validators.minLength(5), Validators.maxLength(25), Validators.pattern('/(0)\\d{10}/')])],\n            'DOB': [null, Validators.required],\n          }, {\n            // updateOn: 'blur'\n          });\n  }\n    // guard\n    ionViewWillEnter() {\n        if ( AuthenticationService.check_Auth() === false) {\n            this.navCtrl.navigateForward('');\n        }\n        // get Token\n        this.storage.get('token').then((val) => {\n            if (val != null) {\n                this.Token = val;\n                this.getMyProfile();\n            }\n        });\n    }\n    getMyProfile() {\n        // Profile Service\n        this.Profile.Profile(this.Token)\n            .then(success => {\n                // @ts-ignore\n                if (!success.id) {\n                    // @ts-ignore\n                    this.HasProfile = false;\n                } else {\n                    // @ts-ignore\n                    this.data.phone = success.phone;\n                    // @ts-ignore\n                    this.data.gender = success.gender;\n                    // @ts-ignore\n                    this.data.DOB = success.DOB;\n                    // @ts-ignore\n                    this.data.location = success.location;\n                    // @ts-ignore\n                    this.data.job = success.job;\n\n                    this.HasProfile = true;\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n    UpdateMyData(action = 'profile') {\n       let ProfileUrl = '';\n        // set token\n        this.data.token = this.Token;\n      if (action === 'profile') {\n          ProfileUrl = 'addprofile';\n      } else {\n          ProfileUrl = 'updateprofile/' + this.data.token;\n      }\n      // call add profile service\n        this.Profile.UpdateProfileData(this.data, ProfileUrl)\n        .then(async success => {\n            // @ts-ignore\n            const SuccessToast = await this.toast.create({\n                message: 'Your profile updated successfully',\n                duration: 2000\n            });\n            SuccessToast.present();\n            if ( ProfileUrl === 'addprofile') {\n                document.getElementById('AddProfile').style.display = 'none';\n                document.getElementById('UpdateProfile').style.display = 'block';\n            }\n        })\n        .catch(async err => {\n            if (err.status === 503) {\n                // create toast in case of success\n                const Errtoast = await this.toast.create({\n                    message: 'Your profile not saved',\n                    duration: 2000\n                });\n                Errtoast.present();\n            }\n        });\n    }\n}\n"],"sourceRoot":""}