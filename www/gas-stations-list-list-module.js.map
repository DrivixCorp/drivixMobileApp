{"version":3,"sources":["webpack:///./src/app/api/search.service.ts","webpack:///./src/app/members/gas-stations/list/list.module.ts","webpack:///./src/app/members/gas-stations/list/list.page.html","webpack:///./src/app/members/gas-stations/list/list.page.scss","webpack:///./src/app/members/gas-stations/list/list.page.ts"],"names":[],"mappings":"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","file":"gas-stations-list-list-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  gasStationSearchURl = 'http://www.drivixcorp.com/api/';\n\n  constructor(public http: HttpClient) { }\n\n  gasStationSearch(key) {\n    return new Promise((resolve, reject) => {\n      this.http.get(this.gasStationSearchURl + 'FilterGasStation',  {\n        params: new HttpParams().set('text', key),\n      })\n          .subscribe(res => {\n            resolve(res);\n          }, (err) => {\n            reject(err);\n          });\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListPage } from './list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ListPage]\n})\nexport class ListPageModule {}\n","module.exports = \"<ion-header no-shadow no-border>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title color=\\\"light\\\"></ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n  <ion-grid>\\n    <ion-row>\\n\\n      <ion-col size=\\\"12\\\">\\n          <h1 class=\\\"searchTitle\\\">Search</h1>\\n\\n          <span class=\\\"searchDescription\\\">search for gas stations with full details</span>\\n      </ion-col>\\n\\n      <ion-col size=\\\"12\\\">\\n        <ion-item>\\n          <ion-searchbar [(ngModel)]=\\\"searchText\\\" (ionChange)=\\\"searchForGasStation()\\\" type=\\\"text\\\" placeholder=\\\"Search by station name\\\" cancelButtonText=\\\"Custom Cancel\\\"></ion-searchbar>\\n        </ion-item>\\n      </ion-col>\\n\\n      <ion-col class=\\\"listTitle\\\" size=\\\"12\\\" *ngIf=\\\"results\\\">\\n        <i class=\\\"far fa-compass\\\"></i>\\n        <span>\\n          nearest gas stations to your location\\n        </span>\\n      </ion-col>\\n\\n      <ion-col size=\\\"12\\\">\\n\\n        <ion-item-sliding *ngFor =\\\"let gasStation of gasStationsList; let i = index\\\">\\n\\n          <ion-item class=\\\"listItem\\\">\\n            <ion-avatar slot=\\\"start\\\">\\n              <img src=\\\"{{gasStation.icon}}\\\">\\n            </ion-avatar>\\n\\n            <ion-label>\\n              <h2 class=\\\"itemName\\\"> {{ gasStation.name }} </h2>\\n              <p class=\\\"itemAddress\\\"> {{ gasStation.address }} </p>\\n              <p class=\\\"itemDistance\\\" *ngIf=\\\"results\\\"> {{ calculateDistance(gasStation.distance) }} </p>\\n              <p class=\\\"itemDistance\\\" *ngIf=\\\"!results\\\"> {{ gasStation.city }} </p>\\n            </ion-label>\\n\\n            <ion-note slot=\\\"end\\\" color=\\\"primary\\\">\\n              RATE :\\n              <i class=\\\"fas fa-star\\\" *ngIf=\\\"gasStation.google_rate>=1\\\" ></i>\\n              <i class=\\\"fas fa-star\\\" *ngIf=\\\"gasStation.google_rate>=2\\\" ></i>\\n              <i class=\\\"fas fa-star\\\" *ngIf=\\\"gasStation.google_rate>=3\\\" ></i>\\n              <i class=\\\"fas fa-star\\\" *ngIf=\\\"gasStation.google_rate>=4\\\" ></i>\\n              <i class=\\\"fas fa-star\\\" *ngIf=\\\"gasStation.google_rate>=5\\\" ></i>\\n              <i *ngIf=\\\"gasStation.google_rate%1!=0\\\" class=\\\"fas fa-star-half-alt\\\" ></i>\\n              <i *ngIf=\\\"gasStation.google_rate==0\\\" class=\\\"far fa-star\\\"></i>\\n              <i *ngIf=\\\"gasStation.google_rate<=1\\\" class=\\\"far fa-star\\\"></i>\\n              <i *ngIf=\\\"gasStation.google_rate<=2\\\" class=\\\"far fa-star\\\"></i>\\n              <i *ngIf=\\\"gasStation.google_rate<=3\\\" class=\\\"far fa-star\\\"></i>\\n              <i *ngIf=\\\"gasStation.google_rate<=4\\\" class=\\\"far fa-star\\\"></i>\\n            </ion-note>\\n          </ion-item>\\n\\n          <ion-item-options side=\\\"end\\\">\\n\\n            <ion-item-option color=\\\"danger\\\">\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"open\\\"></ion-icon>\\n            </ion-item-option>\\n\\n            <ion-item-option>\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"locate\\\"></ion-icon>\\n            </ion-item-option>\\n          </ion-item-options>\\n\\n\\n        </ion-item-sliding>\\n\\n        <div *ngIf=\\\"notFound\\\" class=\\\"notFound\\\"> <i class=\\\"fas fa-info-circle\\\"></i> No gas stations has found </div>\\n\\n      </ion-col>\\n\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\\n\"","module.exports = \"ion-searchbar {\\n  --color: #ffffff;\\n  --background: #3171e0;\\n  --placeholder-color: #ffffff;\\n  --placeholder-font-style: 'Titillium Web', sans-serif; }\\n\\n.listTitle {\\n  color: #000000;\\n  margin-top: 10px;\\n  margin-bottom: 10px; }\\n\\n.listTitle span {\\n  font-size: 13px;\\n  font-weight: bold;\\n  padding-left: 3px;\\n  font-family: 'Raleway', sans-serif; }\\n\\nion-item-sliding {\\n  margin-bottom: 13px; }\\n\\n.listItem {\\n  white-space: normal;\\n  --background: #f2f2f2;\\n  border-left: 3px solid #b3b3b3; }\\n\\n.listItem ion-avatar {\\n  background-color: white;\\n  box-shadow: -14px 13px 41px -21px rgba(0, 0, 0, 0.98); }\\n\\n.itemName {\\n  color: Black;\\n  font-family: 'Raleway', sans-serif; }\\n\\n.itemAddress {\\n  color: #333333;\\n  font-family: 'Titillium Web', sans-serif; }\\n\\n.itemDistance {\\n  color: #737373;\\n  font-family: 'Titillium Web', sans-serif; }\\n\\n.notFound {\\n  padding: 8px;\\n  color: #737373;\\n  text-align: center;\\n  background-color: #e6e6e6;\\n  font-family: 'Titillium Web', sans-serif; }\\n\\n.searchTitle {\\n  color: #df9d04;\\n  font-weight: bold;\\n  font-family: 'Raleway', sans-serif; }\\n\\n.searchDescription {\\n  color: #b3b3b3;\\n  font-size: 14px;\\n  font-family: 'Raleway', sans-serif; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9tbnQvV2luZG93cy9Vc2Vycy9IUC9Eb2N1bWVudHMvUHJvamVjdHMvSW9uaWMvRHJpdml4L3NyYy9hcHAvbWVtYmVycy9nYXMtc3RhdGlvbnMvbGlzdC9saXN0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFRO0VBQ1IscUJBQWE7RUFDYiw0QkFBb0I7RUFDcEIscURBQXlCLEVBQUE7O0FBRTNCO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUIsRUFBQTs7QUFFckI7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGlCQUFpQjtFQUNqQixrQ0FBa0MsRUFBQTs7QUFFcEM7RUFDRSxtQkFBbUIsRUFBQTs7QUFFckI7RUFDRSxtQkFBbUI7RUFDbkIscUJBQWE7RUFDYiw4QkFBOEIsRUFBQTs7QUFFaEM7RUFDRSx1QkFBdUI7RUFDdkIscURBQWtELEVBQUE7O0FBRXBEO0VBQ0UsWUFBWTtFQUNaLGtDQUFrQyxFQUFBOztBQUVwQztFQUNFLGNBQWM7RUFDZCx3Q0FBd0MsRUFBQTs7QUFFMUM7RUFDRSxjQUFjO0VBQ2Qsd0NBQXdDLEVBQUE7O0FBRTFDO0VBQ0UsWUFBWTtFQUNaLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLHdDQUF3QyxFQUFBOztBQUUxQztFQUNFLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsa0NBQWtDLEVBQUE7O0FBRXBDO0VBQ0UsY0FBYztFQUNkLGVBQWU7RUFDZixrQ0FBa0MsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvZ2FzLXN0YXRpb25zL2xpc3QvbGlzdC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tc2VhcmNoYmFye1xuICAtLWNvbG9yOiAjZmZmZmZmO1xuICAtLWJhY2tncm91bmQ6ICMzMTcxZTA7XG4gIC0tcGxhY2Vob2xkZXItY29sb3I6ICNmZmZmZmY7XG4gIC0tcGxhY2Vob2xkZXItZm9udC1zdHlsZTogJ1RpdGlsbGl1bSBXZWInLCBzYW5zLXNlcmlmO1xufVxuLmxpc3RUaXRsZXtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG4ubGlzdFRpdGxlIHNwYW57XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHBhZGRpbmctbGVmdDogM3B4O1xuICBmb250LWZhbWlseTogJ1JhbGV3YXknLCBzYW5zLXNlcmlmO1xufVxuaW9uLWl0ZW0tc2xpZGluZ3tcbiAgbWFyZ2luLWJvdHRvbTogMTNweDtcbn1cbi5saXN0SXRlbXtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLS1iYWNrZ3JvdW5kOiAjZjJmMmYyO1xuICBib3JkZXItbGVmdDogM3B4IHNvbGlkICNiM2IzYjM7XG59XG4ubGlzdEl0ZW0gaW9uLWF2YXRhcntcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGJveC1zaGFkb3c6IC0xNHB4IDEzcHggNDFweCAtMjFweCByZ2JhKDAsMCwwLDAuOTgpO1xufVxuLml0ZW1OYW1le1xuICBjb2xvcjogQmxhY2s7XG4gIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XG59XG4uaXRlbUFkZHJlc3N7XG4gIGNvbG9yOiAjMzMzMzMzO1xuICBmb250LWZhbWlseTogJ1RpdGlsbGl1bSBXZWInLCBzYW5zLXNlcmlmO1xufVxuLml0ZW1EaXN0YW5jZXtcbiAgY29sb3I6ICM3MzczNzM7XG4gIGZvbnQtZmFtaWx5OiAnVGl0aWxsaXVtIFdlYicsIHNhbnMtc2VyaWY7XG59XG4ubm90Rm91bmR7XG4gIHBhZGRpbmc6IDhweDtcbiAgY29sb3I6ICM3MzczNzM7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjtcbiAgZm9udC1mYW1pbHk6ICdUaXRpbGxpdW0gV2ViJywgc2Fucy1zZXJpZjtcbn1cbi5zZWFyY2hUaXRsZXtcbiAgY29sb3I6ICNkZjlkMDQ7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBmb250LWZhbWlseTogJ1JhbGV3YXknLCBzYW5zLXNlcmlmO1xufVxuLnNlYXJjaERlc2NyaXB0aW9ue1xuICBjb2xvcjogI2IzYjNiMztcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LWZhbWlseTogJ1JhbGV3YXknLCBzYW5zLXNlcmlmO1xufVxuXG4iXX0= */\"","import { Storage } from '@ionic/storage';\nimport { DecimalPipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { MapsService } from '../../../api/maps.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { SearchService } from '../../../api/search.service';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { AuthenticationService } from '../../../api/authentication.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.page.html',\n  styleUrls: ['./list.page.scss'],\n})\nexport class ListPage implements OnInit {\n\n  gasStationsList: any = [];\n  searchText: string;\n  notFound = false;\n  results = true;\n\n  constructor(private stationsMap: MapsService, private Auth: AuthenticationService,\n              private storage: Storage, private geolocation: Geolocation, private decimalPipe: DecimalPipe,\n              private searchService: SearchService) { }\n\n  getGasStationsList() {\n    this.geolocation.getCurrentPosition().then((resp) => {\n\n      const currentLocation = { lat: resp.coords.latitude, long: resp.coords.longitude };\n\n      this.stationsMap.getNearestGasStations(currentLocation)\n          .then(async success => {\n            this.gasStationsList = success;\n            console.log(success);\n          })\n          .catch(err => {\n            console.log(err);\n          });\n    });\n  }\n  calculateDistance(distance) {\n    if (distance < 1) {\n      distance = distance * 100;\n      distance = this.decimalPipe.transform(distance, '3.1-2') + ' M';\n    } else {\n      distance = this.decimalPipe.transform(distance, '3.1-2') + ' Km';\n    }\n    return distance;\n  }\n\n  searchForGasStation() {\n    if (this.searchText) {\n      this.results = false;\n      this.searchService.gasStationSearch(this.searchText).then(data => {\n        this.gasStationsList = data;\n        console.log(data);\n        if (Object.keys(data).length > 0) {\n          this.notFound = false;\n        } else {\n          this.notFound = true;\n        }\n      });\n    } else {\n      this.results = true;\n      this.notFound = false;\n      this.getGasStationsList();\n    }\n  }\n\n  ngOnInit() {\n    this.getGasStationsList();\n  }\n\n}\n"],"sourceRoot":""}