{"version":3,"sources":["webpack:///./src/app/public/register/PasswordValidation.ts","webpack:///./src/app/public/register/register.module.ts","webpack:///./src/app/public/register/register.page.html","webpack:///./src/app/public/register/register.page.scss","webpack:///./src/app/public/register/register.page.ts"],"names":[],"mappings":"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","file":"public-register-register-module.js","sourcesContent":["import {AbstractControl} from '@angular/forms';\nexport class PasswordValidation {\n\n    static MatchPassword(AC: AbstractControl) {\n       let password = AC.get('password').value; // to get value in input tag\n       let confirm_pass = AC.get('confirm_pass').value; // to get value in input tag\n        if(password != confirm_pass) {\n            // console.log('false');\n            AC.get('confirm_pass').setErrors( {MatchPassword: true} );\n        } else {\n            // console.log('true');\n        }\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPage } from './register.page';\n\nimport {ReactiveFormsModule} from '@angular/forms';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'})\n  ],\n  declarations: [RegisterPage],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n],\n})\nexport class RegisterPageModule {}\n","module.exports = \"<ion-header no-shadow no-border>\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button></ion-back-button>\\n      </ion-buttons>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n<ion-content padding>\\n\\n    <div class=\\\"intro\\\">\\n      <img class=\\\"logo\\\" src=\\\"../../../assets/images/Logo-yello.png\\\" alt=\\\"drivix logo\\\"/>\\n      <h1 class=\\\"register-subtitle\\\">JOIN US !</h1>\\n    </div>\\n\\n    <div [formGroup]=\\\"registration_form\\\" class=\\\"register-form\\\">\\n        <ion-item>\\n          <ion-label>Username </ion-label>\\n          <ion-input [(ngModel)]=\\\"data.name\\\" type=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\n        </ion-item>\\n        <span class=\\\"error-message\\\" *ngIf=\\\"registration_form.controls['name'].hasError('required') && (registration_form.controls['name'].dirty || registration_form.controls['name'].touched)\\\">This field is required</span>\\n        <span class=\\\"error-message\\\" *ngIf=\\\"registration_form.controls['name'].hasError('minlength') && (registration_form.controls['name'].dirty || registration_form.controls['name'].touched)\\\">Enter at least 3 characters</span>\\n        <span class=\\\"error-message\\\" *ngIf=\\\"registration_form.controls['name'].hasError('maxlength') && (registration_form.controls['name'].dirty || registration_form.controls['name'].touched)\\\">Enter at most 15 characters</span>\\n        <ion-item>\\n          <ion-label>Email Address </ion-label>\\n          <ion-input [(ngModel)]=\\\"data.email\\\" type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\n        </ion-item>\\n        <span class=\\\"error-message\\\" *ngIf=\\\"registration_form.controls['email'].hasError('required') && (registration_form.controls['email'].dirty || registration_form.controls['email'].touched)\\\">This field is required</span>\\n        <span class=\\\"error-message\\\" *ngIf=\\\"registration_form.controls['email'].hasError('pattern') && (registration_form.controls['email'].dirty || registration_form.controls['email'].touched)\\\">Please enter valid mail</span>\\n        <ion-item>\\n          <ion-label>Password </ion-label>\\n          <ion-input [(ngModel)]=\\\"data.password\\\" type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n        </ion-item>\\n        <span class=\\\"error-message\\\" *ngIf=\\\"registration_form.controls['password'].hasError('required') && (registration_form.controls['password'].dirty || registration_form.controls['password'].touched)\\\">This field is required</span>\\n        <span class=\\\"error-message\\\" *ngIf=\\\"registration_form.controls['password'].hasError('minlength') && (registration_form.controls['password'].dirty || registration_form.controls['password'].touched)\\\">Enter at least 8 characters</span>\\n        <span class=\\\"error-message\\\" *ngIf=\\\"registration_form.controls['password'].hasError('maxlength') && (registration_form.controls['password'].dirty || registration_form.controls['password'].touched)\\\">Enter at most 15 characters</span>\\n        <ion-item>\\n          <ion-label>Confirm Password </ion-label>\\n          <ion-input [(ngModel)]=\\\"data.confirm_pass\\\" type=\\\"password\\\" formControlName=\\\"confirm_pass\\\"></ion-input>\\n        </ion-item>\\n        <span class=\\\"error-message\\\" *ngIf=\\\"registration_form.controls['confirm_pass'].hasError('required') && (registration_form.controls['confirm_pass'].dirty)\\\">This field is required</span>\\n        <div class=\\\"error-message\\\" *ngIf=\\\"registration_form.controls.confirm_pass.errors?.MatchPassword\\\">Password not match</div>\\n        \\n        <div class=\\\"errors\\\">\\n            <p class=\\\"error-message\\\" color=\\\"primary\\\" *ngIf=\\\"errors\\\">{{error_msg}}</p>\\n        </div>\\n\\n        <ion-button (click)=\\\"submitForm()\\\" class=\\\"register-btn\\\" expand=\\\"block\\\" color=\\\"secondary\\\">\\n            Register<ion-icon name=\\\"return-right\\\"></ion-icon>\\n        </ion-button>\\n\\n    </div>\\n\\n    <div class=\\\"login-link\\\">\\n      Already have an account? <a href=\\\"/login\\\"><a class=\\\"login-link\\\" routerLink=\\\"/login\\\" routerDirection=\\\"forward\\\">Login</a></a>\\n    </div>\\n\\n</ion-content>\"","module.exports = \"ion-header {\\n  box-shadow: none; }\\n\\n.intro {\\n  margin: auto;\\n  text-align: center; }\\n\\n.logo {\\n  width: 100px; }\\n\\n.register-subtitle {\\n  font-family: 'Raleway', sans-serif; }\\n\\n.register-form ion-label, ion-input {\\n  font-family: 'Titillium Web', sans-serif;\\n  color: #3a3c4d;\\n  font-size: 14px; }\\n\\n.register-form ion-input {\\n  color: black; }\\n\\n.register-form .register-btn {\\n  font-family: 'Titillium Web', sans-serif;\\n  --border-radius: 0px;\\n  --box-shadow:none;\\n  margin-top: 20px; }\\n\\n.register-btn ion-icon {\\n  margin-left: 5px; }\\n\\n.login-link {\\n  margin: auto;\\n  text-align: center;\\n  padding-top: 10px;\\n  font-family: 'Titillium Web', sans-serif;\\n  font-size: 14px; }\\n\\n.register-form ion-item .item-inner {\\n  border: none !important;\\n  box-shadow: none !important; }\\n\\n.register-form ion-item {\\n  margin-bottom: 15px; }\\n\\n.error-message {\\n  font-size: 13px;\\n  color: var(--ion-color-danger-shade);\\n  font-family: 'Titillium Web', sans-serif;\\n  text-align: right;\\n  margin: 0px;\\n  float: right; }\\n\\n.errors {\\n  height: 30px;\\n  margin: 0px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9tbnQvV2luZG93cy9Vc2Vycy9IUC9Eb2N1bWVudHMvUHJvamVjdHMvSW9uaWMvRHJpdml4L3NyYy9hcHAvcHVibGljL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFnQixFQUFBOztBQUVwQjtFQUNJLFlBQVk7RUFDWixrQkFBa0IsRUFBQTs7QUFFdEI7RUFDSSxZQUFZLEVBQUE7O0FBRWhCO0VBQ0ksa0NBQWtDLEVBQUE7O0FBRXRDO0VBQ0ksd0NBQXdDO0VBQ3hDLGNBQWM7RUFDZCxlQUFlLEVBQUE7O0FBRW5CO0VBQ0ksWUFBWSxFQUFBOztBQUVoQjtFQUNJLHdDQUF3QztFQUN4QyxvQkFBZ0I7RUFDaEIsaUJBQWE7RUFDYixnQkFBZ0IsRUFBQTs7QUFFcEI7RUFDSSxnQkFBZ0IsRUFBQTs7QUFFcEI7RUFDSSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQix3Q0FBd0M7RUFDeEMsZUFBZSxFQUFBOztBQUVuQjtFQUNJLHVCQUF1QjtFQUN2QiwyQkFBMkIsRUFBQTs7QUFFL0I7RUFDSSxtQkFBbUIsRUFBQTs7QUFFdkI7RUFDSSxlQUFlO0VBQ2Ysb0NBQW9DO0VBQ3BDLHdDQUF3QztFQUN4QyxpQkFBaUI7RUFDakIsV0FBVTtFQUNWLFlBQVksRUFBQTs7QUFFaEI7RUFDSSxZQUFZO0VBQ1osV0FBVSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHVibGljL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1oZWFkZXJ7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbn1cbi5pbnRyb3tcbiAgICBtYXJnaW46IGF1dG87XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmxvZ297XG4gICAgd2lkdGg6IDEwMHB4O1xufVxuLnJlZ2lzdGVyLXN1YnRpdGxle1xuICAgIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XG59XG4ucmVnaXN0ZXItZm9ybSBpb24tbGFiZWwsIGlvbi1pbnB1dHtcbiAgICBmb250LWZhbWlseTogJ1RpdGlsbGl1bSBXZWInLCBzYW5zLXNlcmlmO1xuICAgIGNvbG9yOiAjM2EzYzRkO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5yZWdpc3Rlci1mb3JtIGlvbi1pbnB1dHtcbiAgICBjb2xvcjogYmxhY2s7XG59XG4ucmVnaXN0ZXItZm9ybSAucmVnaXN0ZXItYnRue1xuICAgIGZvbnQtZmFtaWx5OiAnVGl0aWxsaXVtIFdlYicsIHNhbnMtc2VyaWY7XG4gICAgLS1ib3JkZXItcmFkaXVzOiAwcHg7XG4gICAgLS1ib3gtc2hhZG93Om5vbmU7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbn1cbi5yZWdpc3Rlci1idG4gaW9uLWljb257XG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcbn1cbi5sb2dpbi1saW5re1xuICAgIG1hcmdpbjogYXV0bztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZy10b3A6IDEwcHg7XG4gICAgZm9udC1mYW1pbHk6ICdUaXRpbGxpdW0gV2ViJywgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDE0cHg7XG59XG4ucmVnaXN0ZXItZm9ybSBpb24taXRlbSAuaXRlbS1pbm5lciB7XG4gICAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICB9XG4ucmVnaXN0ZXItZm9ybSBpb24taXRlbXtcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xufVxuLmVycm9yLW1lc3NhZ2V7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFuZ2VyLXNoYWRlKTtcbiAgICBmb250LWZhbWlseTogJ1RpdGlsbGl1bSBXZWInLCBzYW5zLXNlcmlmO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIG1hcmdpbjowcHg7XG4gICAgZmxvYXQ6IHJpZ2h0O1xufVxuLmVycm9yc3tcbiAgICBoZWlnaHQ6IDMwcHg7XG4gICAgbWFyZ2luOjBweDtcbn0iXX0= */\"","import { Component } from '@angular/core';\nimport {NavController} from '@ionic/angular';\nimport {AuthenticationService} from '../../api/authentication.service';\nimport {Storage} from '@ionic/storage';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport { PasswordValidation } from './PasswordValidation';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage {\n\n    // fields\n    data = {\n        email: '',\n        password: '' ,\n        confirm_pass: '',\n        name: '',\n    };\n\n    // error\n  errors = false;\n  error_msg = \"\";\n\n    // password_confirmation = false;\n\n    registration_form: FormGroup;\n\n    // constructor\n    constructor(private Auth: AuthenticationService , public navCtrl: NavController , private storage: Storage , fb: FormBuilder) { \n        this.registration_form = fb.group({\n            'email': ['', Validators.compose([Validators.required, Validators.pattern(/^(\\d{10}|\\w+@\\w+\\.\\w{2,3})$/)])],\n            'password': ['', Validators.compose([Validators.required, Validators.minLength(8), Validators.maxLength(15)])],\n            'name': ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(15)])],\n            'confirm_pass': ['', Validators.compose([Validators.required])]\n          }, {\n            validator: PasswordValidation.MatchPassword,\n            // updateOn: 'blur'\n          }\n          );\n    }\n    // ____________________________________________________\n    submitForm() {\n        for (let v in this.registration_form.controls) {\n        this.registration_form.controls[v].markAsTouched();\n        }\n        if (this.registration_form.valid) {\n        this.register();\n        } else {\n        }\n    };\n    // ____________________________________________________\n    // will enter guard\n    ionViewWillEnter() {\n        // check if token set or not\n        this.storage.get('token').then((val) => {\n            if (val != null) {\n                AuthenticationService.User = true;\n                this.navCtrl.navigateForward('/members/menu/services');\n            }\n        });\n    }\n    // register\n    register() {\n            this.Auth.register(this.data)\n            .then(success => {\n                AuthenticationService.User = success;\n                // @ts-ignore\n                this.storage.set('token', success.token);\n                this.navCtrl.navigateForward('/members/menu/services');\n            })\n            .catch(err => {\n                if(err.status == 500){\n                    this.error_msg = \"THIS E-MAIL ALREADY EXISTS\";\n                    this.errors=true;\n                }\n            });\n    }\n}\n"],"sourceRoot":""}